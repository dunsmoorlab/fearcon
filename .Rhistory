tr.res <- ggplot(tr, aes(x=variable,y=value,shape=Phase)) +
tr.res
tr <- s_day1_tr
tr.res <- ggplot(tr, aes(x=variable,y=value,shape=Phase)) +
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,shape=Phase)) +
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,shape=Phase))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,shape=Phase,color=Phase))
tr.res
tr
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line()
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(linetype=Phase))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(linetype=Phase, color=Phase))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase))
tr.res
s_er_tr <- summarySE(melt_er_tr, measurevar = 'value', groupvars = c('Phase','variable'))
tr <- rbind(s_day1_tr,s_er_tr)
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase))
tr.res
trtr <- 50
day1_tr <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:trtr])
day1_tr <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:trtr])
colnames(day1_tr)[1:2] <- c('Subject','Phase')
er_tr <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:trtr])
colnames(er_tr)[1:2] <- c('Subject','Phase')
melt_day1_tr <- melt(day1_tr,id.vars = c('Phase','Subject'))
melt_er_tr <- melt(er_tr, id.vars = c('Phase','Subject'))
s_day1_tr <- summarySE(melt_day1_tr, measurevar = 'value', groupvars = c('Phase','variable'))
s_er_tr <- summarySE(melt_er_tr, measurevar = 'value', groupvars = c('Phase','variable'))
tr <- rbind(s_day1_tr,s_er_tr)
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase), size = 2)
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase), size = 1.3)
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase), size = Extinction_Recall)
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase), size = Phase)
tr.res
tr
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Extinction_Recall))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase))
tr.res
tr$Phase <- factor(tr$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual()
tr.res
tr$Phase <- factor(tr$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
trtr <- 50
day1_tr <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:trtr])
colnames(day1_tr)[1:2] <- c('Subject','Phase')
er_tr <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:trtr])
colnames(er_tr)[1:2] <- c('Subject','Phase')
melt_day1_tr <- melt(day1_tr,id.vars = c('Phase','Subject'))
melt_er_tr <- melt(er_tr, id.vars = c('Phase','Subject'))
s_day1_tr <- summarySE(melt_day1_tr, measurevar = 'value', groupvars = c('Phase','variable'))
s_er_tr <- summarySE(melt_er_tr, measurevar = 'value', groupvars = c('Phase','variable'))
tr <- rbind(s_day1_tr,s_er_tr)
tr$Phase <- factor(tr$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual()
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(c(.5,.5,.5,1))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(value = c(.5,.5,.5,1))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) #+
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(value = c(.5,.5,.5,1))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(value = c(.5,.5,.5,1))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(values = c(.5,.5,.5,1))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase)) +
scale_size_manual(values = c(.3,.3,.3,1))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,.5,1)) + scale_linetype_manual(values = c('dash','dash','dash','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,.5,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.7,.7,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('solid','solid','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dotted','dotted','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dotdash','dotdas','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
help("scale_linetype_manual")
day1_ctx <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw)#[,1:TR])
colnames(day1_ctx)[1:2] <- c('Subject','Phase')
er_ctx <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw)#[,1:TR])
colnames(er_ctx)[1:2] <- c('Subject','Phase')
day1_res <- melt(day1_ctx,id.vars = c('Subject','Phase'))
er_res <- melt(er_ctx,id.vars = c('Subject','Phase'))
day1er <- rbind(day1_res, er_res)
s_day1_res <- summarySE(day1_res, measurevar = 'value', groupvars = c('Phase'))
s_er_res <- summarySE(er_res,measurevar = 'value', groupvars = c('Phase'))
ctx_res <- rbind(s_day1_res,s_er_res)
ctx_res$Phase <- factor(ctx_res$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.5) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = 1:15; LogReg, 2cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.5) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = all; LogReg, 2cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
day1_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/day1_out4.csv', header=FALSE)
er_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/er_out4.csv', header = FALSE)
#first look at mean across some TRs
######################################
TR <- 15
day1_ctx <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:TR])
colnames(day1_ctx)[1:2] <- c('Subject','Phase')
er_ctx <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:TR])
colnames(er_ctx)[1:2] <- c('Subject','Phase')
day1_res <- melt(day1_ctx,id.vars = c('Subject','Phase'))
er_res <- melt(er_ctx,id.vars = c('Subject','Phase'))
day1er <- rbind(day1_res, er_res)
s_day1_res <- summarySE(day1_res, measurevar = 'value', groupvars = c('Phase'))
s_er_res <- summarySE(er_res,measurevar = 'value', groupvars = c('Phase'))
ctx_res <- rbind(s_day1_res,s_er_res)
#ctx_res <- summarySE(day1er,measurevar = 'value', groupvars = c('Phase'))
ctx_res$Phase <- factor(ctx_res$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
point_res <- summarySE(day1er, measurevar = 'value', groupvars = c('Subject', 'Phase'))
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.25) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = all; LogReg, 4cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
######################################
#next lets look at it TR by TR
trtr <- 50
day1_tr <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:trtr])
colnames(day1_tr)[1:2] <- c('Subject','Phase')
er_tr <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:trtr])
colnames(er_tr)[1:2] <- c('Subject','Phase')
melt_day1_tr <- melt(day1_tr,id.vars = c('Phase','Subject'))
melt_er_tr <- melt(er_tr, id.vars = c('Phase','Subject'))
s_day1_tr <- summarySE(melt_day1_tr, measurevar = 'value', groupvars = c('Phase','variable'))
s_er_tr <- summarySE(melt_er_tr, measurevar = 'value', groupvars = c('Phase','variable'))
tr <- rbind(s_day1_tr,s_er_tr)
tr$Phase <- factor(tr$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
day1_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/day1_out4.csv', header=FALSE)
er_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/er_out4.csv', header = FALSE)
#first look at mean across some TRs
######################################
TR <- 15
day1_ctx <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:TR])
colnames(day1_ctx)[1:2] <- c('Subject','Phase')
er_ctx <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:TR])
colnames(er_ctx)[1:2] <- c('Subject','Phase')
day1_res <- melt(day1_ctx,id.vars = c('Subject','Phase'))
er_res <- melt(er_ctx,id.vars = c('Subject','Phase'))
day1er <- rbind(day1_res, er_res)
s_day1_res <- summarySE(day1_res, measurevar = 'value', groupvars = c('Phase'))
s_er_res <- summarySE(er_res,measurevar = 'value', groupvars = c('Phase'))
ctx_res <- rbind(s_day1_res,s_er_res)
#ctx_res <- summarySE(day1er,measurevar = 'value', groupvars = c('Phase'))
ctx_res$Phase <- factor(ctx_res$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
point_res <- summarySE(day1er, measurevar = 'value', groupvars = c('Subject', 'Phase'))
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.25) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = all; LogReg, 4cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
######################################
#next lets look at it TR by TR
trtr <- 50
day1_tr <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw[,1:trtr])
colnames(day1_tr)[1:2] <- c('Subject','Phase')
er_tr <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw[,1:trtr])
colnames(er_tr)[1:2] <- c('Subject','Phase')
melt_day1_tr <- melt(day1_tr,id.vars = c('Phase','Subject'))
melt_er_tr <- melt(er_tr, id.vars = c('Phase','Subject'))
s_day1_tr <- summarySE(melt_day1_tr, measurevar = 'value', groupvars = c('Phase','variable'))
s_er_tr <- summarySE(melt_er_tr, measurevar = 'value', groupvars = c('Phase','variable'))
tr <- rbind(s_day1_tr,s_er_tr)
tr$Phase <- factor(tr$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = (wes_palette(n=4,name = 'Darkeeling1')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = (wes_palette(n=4,name = 'Darjeeling1')))
tr.res
wes_palettes
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = (wes_palette(n=4,name = 'Darjeeling')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Darjeeling')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Royal')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Royal1')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Royal2')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Royal3')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Moonrise')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Moonrise1')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Moonrise2')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Moonrise3')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Zissou')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'Zissou2')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid')) +
scale_color_manual(values = rev(wes_palette(n=4,name = 'FantasticFox')))
tr.res
tr.res <- ggplot(tr, aes(x=variable,y=value,group=Phase)) + geom_line(aes(color=Phase, size = Phase, linetype = Phase)) +
scale_size_manual(values = c(.5,.5,1,1)) + scale_linetype_manual(values = c('dashed','dashed','dashed','solid'))
tr.res
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.25) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = all; LogReg, 4cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.25) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = 1:15; LogReg, 4cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
day1_ctx <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw)#[,1:TR])
colnames(day1_ctx)[1:2] <- c('Subject','Phase')
er_ctx <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw)#[,1:TR])
colnames(er_ctx)[1:2] <- c('Subject','Phase')
day1_res <- melt(day1_ctx,id.vars = c('Subject','Phase'))
day1_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/day1_out4.csv', header=FALSE)
er_raw <- read.csv('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/graphing/er_out4.csv', header = FALSE)
TR <- 15
day1_ctx <- cbind(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5),c('Baseline','Baseline','Baseline','Baseline','Baseline','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Fear_Conditioning','Extinction','Extinction','Extinction','Extinction','Extinction'),day1_raw)#[,1:TR])
colnames(day1_ctx)[1:2] <- c('Subject','Phase')
er_ctx <- cbind(c(1,2,3,4,5),c('Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall','Extinction_Recall'),er_raw)#[,1:TR])
colnames(er_ctx)[1:2] <- c('Subject','Phase')
day1_res <- melt(day1_ctx,id.vars = c('Subject','Phase'))
er_res <- melt(er_ctx,id.vars = c('Subject','Phase'))
day1er <- rbind(day1_res, er_res)
s_day1_res <- summarySE(day1_res, measurevar = 'value', groupvars = c('Phase'))
s_er_res <- summarySE(er_res,measurevar = 'value', groupvars = c('Phase'))
ctx_res <- rbind(s_day1_res,s_er_res)
ctx_res$Phase <- factor(ctx_res$Phase, levels = c('Baseline','Fear_Conditioning','Extinction','Extinction_Recall'))
point_res <- summarySE(day1er, measurevar = 'value', groupvars = c('Subject', 'Phase'))
ctx.res <- ggplot(ctx_res, aes(x=Phase,y=value,fill=Phase)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) + geom_hline(yintercept =.25) +
ylab('Scene Evidence') + xlab('Phase') + ggtitle('Mean scene evidence for TR = all; LogReg, 4cat') +
geom_point(data=point_res, aes(x = Phase , y=value, fill=Phase, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=4,name = 'GrandBudapest2')))
ctx.res
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) +
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = wes_palette(n=2, name = 'Darjeeling'))
res <- data.frame(matrix(nrow=5,ncol=5))
colnames(res) <- c('Subject','VT_0.05','VT_0.01','LOC_VT_0.05','LOC_VT_0.01')
res$Subject <- c(1,2,3,4,5)
res$VT_0.05 <- c(0.578125000000000, 0.803125000000000, 0.443750000000000,	0.637500000000000,0.7469)
res$VT_0.01 <- c(0.578125000000000,	0.812500000000000,	0.440625000000000,	0.659375000000000,0.7625)
res$LOC_VT_0.05 <- c(0.625000000000000,	0.834375000000000,	0.428125000000000,	0.628125000000000,0.7656)
res$LOC_VT_0.01 <- c(0.612500000000000,	0.834375000000000,	0.421875000000000,	0.643750000000000,0.7813)
melted_res <- melt(res,id.vars = 'Subject')
melted_res$Mask[1:10] <- 'VT'
melted_res$Mask[11:20] <- 'LOC_VT'
melted_res$FS_thresh <- c('0.05','0.05','0.05','0.05','0.05','0.01','0.01','0.01','0.01','0.01','0.05','0.05','0.05','0.05','0.05','0.01','0.01','0.01','0.01','0.01')
summary_res <- summarySE(melted_res, measurevar = 'value', groupvars = c('variable','Mask','FS_thresh'))
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) +
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = wes_palette(n=2, name = 'Darjeeling'))
clf.res
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) +
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(n=2, name = 'Darjeeling')))
clf.res
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) +
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(name = 'Darjeeling')))
clf.res
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) + ggtitle('Mask and ANOVA threshold modulates classifier accuracy')
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(name = 'Darjeeling')))
clf.res
clf.res <- ggplot(summary_res, aes(x=variable,y=value,fill=Mask,alpha=FS_thresh)) + geom_bar(position = position_dodge(), stat = 'identity') +
geom_errorbar(aes(ymin=value-se,ymax=value+se), width = .3) +
ylab('Classifier Accuracy') + xlab('analysis type') +
scale_alpha_manual(values = c(1,.5,1)) + ggtitle('Mask and ANOVA threshold modulates classifier accuracy') +
geom_point(data=melted_res, aes(x = variable , y=value, fill=Mask, shape = factor(Subject)), position = position_dodge(width = .3)) +
scale_fill_manual(values = rev(wes_palette(name = 'Darjeeling')))
clf.res
make_regs_sels <- function(subj=NULL){
require(MASS)
SUBJ = paste0('Sub00',subj)
MVPA_dir = paste0('/Users/ach3377/GoogleDrive/FC_FMRI_DATA/',SUBJ,'/model/MVPA')
label_dir = paste0(MVPA_dir,'/labels')
toolbox = paste0(MVPA_dir,'/toolbox')
#localizer xval
#####################################################
#make run selectors first (easy)
selectors <- matrix(nrow = 1, ncol = 480)
selectors[,1:240] <- 1
selectors[,241:480] <- 2
write.matrix(selectors,file = paste0(toolbox,'/2run_localizer_sels'))
#load in the numpy TR labels for each run
loc1 <- read.csv(paste0(toolbox,'/localizer_1_labels_RAW.csv'),header=FALSE)
loc2 <- read.csv(paste0(toolbox,'/localizer_2_labels_RAW.csv'),header=FALSE)
#add the right number of TRs to the end of the localizer runs (6; functional runs have 240 TRs)
loc1[234:240,] <- 'rest'
loc2[235:240,] <- 'rest'
#combine the 2 localizer runs
loc_cats <- rbind(loc1,loc2)
loc_cat2num <- matrix(nrow=dim(loc_cats)[1], ncol=1)
#for internal reference, the rows of the reg mat are in descending order: ANIMAL, TOOL, SCENE, SCRAMBLED, REST
#convert the category strings to be numbers(animal:1, tool:2, scene:3, scrambled:4, rest:5)
for (q in 1:dim(loc_cats)[1]){
cat = loc_cats[q,1]
if (cat == 'animal'){
loc_cat2num[q,1] <- 1}
else if (cat == 'tool'){
loc_cat2num[q,1] <- 2}
else if (cat == 'indoor' | cat == 'outdoor'){
loc_cat2num[q,1] <- 3}
else if (cat == 'scrambled'){
loc_cat2num[q,1] <- 4}
else if (cat == 'rest'){
loc_cat2num[q,1] <- 5}
}
#collect the categories in easy mode
real_cats <- as.integer(loc_cat2num[,1])
#initialize the output matrix
loc_regs <- matrix(nrow=4, ncol=480)
#set everything to 0
loc_regs[is.na(loc_regs)] <- 0
#for internal reference, the rows of the reg mat are in descending order: ANIMAL, TOOL, SCENE, SCRAMBLED, REST
#populate the regs mat with 1s for the correct category at each TR
for (i in 1:length(real_cats)){
if (real_cats[i] == 5){}
else {
loc_regs[real_cats[i],i] <- 1
}
}
#save them!
write.matrix(loc_regs,file = paste0(toolbox,'/4cat_localizer_regs'))
##################################################
#make binary scene regs, where there are just 2 conditions, scene or not scene. Also model rest
loc_cat2scene <- matrix(nrow=dim(loc_cats)[1], ncol=1)
#for internal reference, the rows of the reg mat are in descending order: ANIMAL, TOOL, SCENE, SCRAMBLED, REST
#convert the category strings to be numbers(scene:1, not scene2, rest:3)
for (q in 1:dim(loc_cats)[1]){
cat = loc_cats[q,1]
if (cat == 'indoor' | cat == 'outdoor'){
loc_cat2scene[q,1] <- 1}
else if (cat == 'rest'){
loc_cat2scene[q,1] <- 3}
else {
loc_cat2scene[q,1] <- 2
}
}
#collect the categories in easy mode
scene_cats <- as.integer(loc_cat2scene[,1])
#initialize the output matrix
loc_scene_regs <- matrix(nrow=2, ncol=480)
#set everything to 0
loc_scene_regs[is.na(loc_scene_regs)] <- 0
#for internal reference, the rows of the reg mat are in descending order: ANIMAL, TOOL, SCENE, SCRAMBLED, REST
#populate the regs mat with 1s for the correct category at each TR
for (i in 1:length(scene_cats)){
if (scene_cats[i] == 3){}
else {
loc_scene_regs[scene_cats[i],i] <- 1
}
}
#save them!
write.matrix(loc_scene_regs,file = paste0(toolbox,'/scene_localizer_regs'))
#prelim mental context analysis
#################################################
#Day1 + LOCALIZER first
#Day1 has 259 TRs
sel_base <- matrix(nrow = 1, ncol = 739)
sel_base[,1:259] <- 1
sel_base[,260:739] <- 2
write.matrix(sel_base, file = paste0(toolbox,'/day1_localizer_sels'))
sel_base_proc <- matrix(nrow = 1, ncol = 739)
sel_base_proc[,1:259] <- 1
sel_base_proc[,260:499] <- 2
sel_base_proc[,499:739] <- 3
write.matrix(sel_base_proc, file = paste0(toolbox,'/proc_day1_localizer_sels'))
#so for this analysis, don't actually care about classifying stimuli, just want general scene activation
#We can hard code regs for each phase with every TR set to scene
base_regs <- matrix(nrow=4, ncol = 259)
base_regs[is.na(base_regs)] <- 0
base_regs[3,] <- 1
base_regs <- cbind(base_regs,loc_regs)
write.matrix(base_regs,file = paste0(toolbox,'/day1_4cat_regs'))
#Now again but just for scene/not scene
base_scene_regs <- matrix(nrow=2, ncol = 259)
base_scene_regs[is.na(base_scene_regs)] <- 0
base_scene_regs[1,] <- 1
base_scene_regs <- cbind(base_scene_regs,loc_scene_regs)
write.matrix(base_scene_regs,file = paste0(toolbox,'/day1_scene_regs'))
##########################################################################
#now for extinction recall
#extinction recall has 135 TRs
sel_er <- matrix(nrow = 1, ncol = 615)
sel_er[,1:135] <- 1
sel_er[,136:615] <- 2
write.matrix(sel_er, file = paste0(toolbox,'/extinction_recall_localizer_sels'))
sel_er_proc <- matrix(nrow = 1, ncol = 615)
sel_er_proc[,1:135] <- 1
sel_er_proc[,136:375] <- 2
sel_er_proc[,376:615] <- 3
write.matrix(sel_er_proc, file = paste0(toolbox,'/proc_extinction_recall_localizer_sels'))
#so for this analysis, don't actually care about classifying stimuli, just want general scene activation
#We can hard code regs for each phase with every TR set to scene
er_regs <- matrix(nrow=4, ncol = 135)
er_regs[is.na(er_regs)] <- 0
er_regs[3,] <- 1
er_regs <- cbind(er_regs,loc_regs)
write.matrix(er_regs,file = paste0(toolbox,'/extinction_recall_4cat_regs'))
#Now again but just for scene/not scene
er_scene_regs <- matrix(nrow=2, ncol = 135)
er_scene_regs[is.na(er_scene_regs)] <- 0
er_scene_regs[1,] <- 1
er_scene_regs <- cbind(er_scene_regs,loc_scene_regs)
write.matrix(er_scene_regs,file = paste0(toolbox,'/extinction_recall_scene_regs'))
}
